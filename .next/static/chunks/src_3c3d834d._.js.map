{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/edwin/Desktop/CSCI3100_Project/src/utils/sessions.ts"],"sourcesContent":["import { SessionOptions, getIronSession, unsealData } from \"iron-session\";\nimport type { NextRequest } from \"next/server\";\n\n// Type for session data\nexport interface SessionData {\n  userId?: number;\n  username?: string;\n  roles?: string;\n  isLoggedIn: boolean;\n  token?: string;\n  avatar?: string | null;\n  email?: string;\n}\n\n// Default session state when not logged in\nexport const defaultSession: SessionData = {\n  isLoggedIn: false,\n};\n\n// Session configuration\nexport const sessionOptions: SessionOptions = {\n  password:\n    process.env.SESSION_SECRET ||\n    (process.env.NODE_ENV === \"development\" ? \"FALLBACK_DEVELOPMENT_SECRET_KEY_IF_NO_ENV_FILE\" : \"\"),\n  cookieName: \"flowchat_session\",\n  cookieOptions: {\n    // secure should be true in production\n    secure: process.env.NODE_ENV === \"production\",\n    sameSite: \"strict\",\n    maxAge: 60 * 60 * 24, // 1 day\n  },\n};\n\n// Get the session data\nexport async function getSession() {\n  const { cookies } = await import(\"next/headers\");\n  const session = await getIronSession<SessionData>(await cookies(), sessionOptions);\n\n  // Initialize the session if not already done\n  if (!session.isLoggedIn) {\n    session.isLoggedIn = false;\n  }\n\n  return session;\n}\n\n// Read-only version of session for middleware\nexport async function readSessionFromRequest(req: NextRequest): Promise<SessionData> {\n  try {\n    const cookieValue = req.cookies.get(sessionOptions.cookieName)?.value;\n\n    if (!cookieValue) {\n      return defaultSession;\n    }\n\n    const data = await unsealData<SessionData>(cookieValue, {\n      password: sessionOptions.password,\n    });\n\n    return data.isLoggedIn ? data : defaultSession;\n  } catch (error) {\n    console.error(\"Error reading session in middleware:\", error);\n    return defaultSession;\n  }\n}\n"],"names":[],"mappings":";;;;;;AAsBI;AAtBJ;;AAeO,MAAM,iBAA8B;IACzC,YAAY;AACd;AAGO,MAAM,iBAAiC;IAC5C,UACE,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,cAAc,IAC1B,CAAC,uCAAyC,uFAAqD;IACjG,YAAY;IACZ,eAAe;QACb,sCAAsC;QACtC,QAAQ,oDAAyB;QACjC,UAAU;QACV,QAAQ,KAAK,KAAK;IACpB;AACF;AAGO,eAAe;IACpB,MAAM,EAAE,OAAO,EAAE,GAAG;IACpB,MAAM,UAAU,MAAM,CAAA,GAAA,mJAAA,CAAA,iBAAc,AAAD,EAAe,MAAM,WAAW;IAEnE,6CAA6C;IAC7C,IAAI,CAAC,QAAQ,UAAU,EAAE;QACvB,QAAQ,UAAU,GAAG;IACvB;IAEA,OAAO;AACT;AAGO,eAAe,uBAAuB,GAAgB;IAC3D,IAAI;QACF,MAAM,cAAc,IAAI,OAAO,CAAC,GAAG,CAAC,eAAe,UAAU,GAAG;QAEhE,IAAI,CAAC,aAAa;YAChB,OAAO;QACT;QAEA,MAAM,OAAO,MAAM,CAAA,GAAA,mJAAA,CAAA,aAAU,AAAD,EAAe,aAAa;YACtD,UAAU,eAAe,QAAQ;QACnC;QAEA,OAAO,KAAK,UAAU,GAAG,OAAO;IAClC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wCAAwC;QACtD,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file:///Users/edwin/Desktop/CSCI3100_Project/src/hooks/useSession.tsx"],"sourcesContent":["\"use client\";\n\nimport { createContext, useContext, useState, useEffect, ReactNode } from \"react\";\nimport { SessionData, defaultSession } from \"@/utils/sessions\";\n\n// Context setup\nconst SessionContext = createContext<{\n  session: SessionData;\n  loading: boolean;\n  refresh: () => Promise<void>;\n}>({\n  session: defaultSession,\n  loading: true,\n  refresh: async () => {},\n});\n\n// Provider component\nexport function SessionProvider({ children }: { children: ReactNode }) {\n  const [session, setSession] = useState<SessionData>(defaultSession);\n  const [loading, setLoading] = useState(true);\n\n  // Function to fetch session data\n  const refresh = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(\"/api/session\");\n      const data = await response.json();\n      setSession(data);\n    } catch (error) {\n      console.error(\"Failed to refresh session:\", error);\n      setSession(defaultSession);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Load session on mount\n  useEffect(() => {\n    refresh();\n  }, []);\n\n  return <SessionContext.Provider value={{ session, loading, refresh }}>{children}</SessionContext.Provider>;\n}\n\n// Hook to use the session\nexport function useSession() {\n  const context = useContext(SessionContext);\n  if (context === undefined) {\n    throw new Error(\"useSession must be used within a SessionProvider\");\n  }\n  return context;\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;;;AAHA;;;AAKA,gBAAgB;AAChB,MAAM,+BAAiB,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAIhC;IACD,SAAS,2HAAA,CAAA,iBAAc;IACvB,SAAS;IACT,SAAS,WAAa;AACxB;AAGO,SAAS,gBAAgB,EAAE,QAAQ,EAA2B;;IACnE,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe,2HAAA,CAAA,iBAAc;IAClE,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,iCAAiC;IACjC,MAAM,UAAU;QACd,IAAI;YACF,WAAW;YACX,MAAM,WAAW,MAAM,MAAM;YAC7B,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,WAAW;QACb,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,8BAA8B;YAC5C,WAAW,2HAAA,CAAA,iBAAc;QAC3B,SAAU;YACR,WAAW;QACb;IACF;IAEA,wBAAwB;IACxB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;qCAAE;YACR;QACF;oCAAG,EAAE;IAEL,qBAAO,6LAAC,eAAe,QAAQ;QAAC,OAAO;YAAE;YAAS;YAAS;QAAQ;kBAAI;;;;;;AACzE;GAzBgB;KAAA;AA4BT,SAAS;;IACd,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;IANgB","debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file:///Users/edwin/Desktop/CSCI3100_Project/src/utils/authentication.ts"],"sourcesContent":["\"use server\";\n\nimport { getSession } from \"@/utils/sessions\";\n\n// API response types\ninterface ApiResponse<T> {\n  message: string;\n  data: T;\n}\n\ninterface LoginData {\n  isPasswordCorrect: boolean | null;\n  isAccountActive: boolean;\n  user: {\n    roles: string;\n    id: number;\n    avatar: string | null;\n    email: string;\n    token: string;\n    username: string;\n  } | null;\n}\n\ninterface RegisterData {\n  user: {\n    role: string;\n    id: number;\n    username: string;\n  } | null;\n  isSuccess: boolean;\n}\n\ninterface RequestData {\n  isSuccess: boolean;\n}\n\ninterface EmailCheckData {\n  isEmailUnique: boolean;\n}\n\ninterface UsernameCheckData {\n  isUsernameUnique: boolean;\n}\n\ninterface DeleteAccountData {\n  isSuccess: boolean;\n}\n\ninterface ResetPasswordData {\n  username: string | null;\n  isSuccess: boolean;\n}\n\n// Helper function for API calls to reduce repetition\nasync function apiFetch<T>(endpoint: string, options?: RequestInit): Promise<ApiResponse<T>> {\n  try {\n    const response = await fetch(`https://flowchatbackend.azurewebsites.net/api/${endpoint}`, options);\n    const result: ApiResponse<T> = await response.json();\n    return result;\n  } catch (error) {\n    console.error(`API error (${endpoint}):`, error);\n    return {\n      message: \"An error occurred during the request\",\n      data: {} as T,\n    };\n  }\n}\n\n// Login server action\nexport async function login(formData: FormData) {\n  const username = formData.get(\"username\") as string | null;\n  const email = formData.get(\"email\") as string | null;\n  const password = formData.get(\"password\") as string;\n\n  try {\n    const result = await apiFetch<LoginData>(\"/Account/login\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ username, email, password }),\n    });\n\n    // Successful login\n    if (result.data.isPasswordCorrect && result.data.isAccountActive && result.data.user) {\n      const session = await getSession();\n\n      // Save user data in session\n      session.userId = result.data.user.id;\n      session.username = result.data.user.username;\n      session.roles = result.data.user.roles;\n      session.isLoggedIn = true;\n      session.token = result.data.user.token;\n      session.avatar = result.data.user.avatar;\n      session.email = result.data.user.email;\n      await session.save();\n    }\n\n    return result;\n  } catch {\n    return {\n      message: \"Login failed\",\n      data: {\n        isPasswordCorrect: false,\n        isAccountActive: false,\n        user: null,\n      },\n    };\n  }\n}\n\n// Logout server action\nexport async function logout() {\n  try {\n    // clear session\n    const session = await getSession();\n    session.destroy();\n  } catch (error) {\n    console.error(\"Logout error:\", error);\n    return { error: \"Failed to log out\" };\n  }\n}\n\n// Registration server action\nexport async function register(formData: FormData) {\n  const username = formData.get(\"username\") as string;\n  const email = formData.get(\"email\") as string;\n  const password = formData.get(\"password\") as string;\n  const licenseKey = formData.get(\"licenseKey\") as string;\n\n  try {\n    const result = await apiFetch<RegisterData>(\"Account/registerAccount\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ username, email, password, licenseKey }),\n    });\n\n    return result;\n  } catch {\n    return {\n      message: \"An error occurred during registration\",\n      data: {\n        user: null,\n        isSuccess: false,\n      },\n    };\n  }\n}\n\n// Request license key server action\nexport async function requestLicenseKey(email: string) {\n  try {\n    const result = await apiFetch<RequestData>(\"Account/requestLicenseKey\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ email }),\n    });\n\n    return result;\n  } catch {\n    return {\n      message: \"Failed to request license key\",\n      data: { isSuccess: false },\n    };\n  }\n}\n\n// Request authentication code server action\nexport async function requestAuthCode(email: string) {\n  try {\n    const result = await apiFetch<RequestData>(\"Account/requestAuthenticationCode\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ email }),\n    });\n\n    return result;\n  } catch {\n    return {\n      message: \"Failed to request authentication code\",\n      data: { isSuccess: false },\n    };\n  }\n}\n\n// Check if email is unique server action\nexport async function checkEmailUnique(email: string) {\n  try {\n    return await apiFetch<EmailCheckData>(`Account/isEmailUnique?email=${encodeURIComponent(email)}`);\n  } catch {\n    return {\n      message: \"Failed to check email uniqueness\",\n      data: { isEmailUnique: false },\n    };\n  }\n}\n\n// Check if username is unique server action\nexport async function checkUsernameUnique(username: string) {\n  try {\n    return await apiFetch<UsernameCheckData>(`Account/isUsernameUnique?username=${encodeURIComponent(username)}`);\n  } catch {\n    return {\n      message: \"Failed to check username uniqueness\",\n      data: { isUsernameUnique: false },\n    };\n  }\n}\n\n// Delete account server action\nexport async function deleteAccount(formData: FormData) {\n  const username = formData.get(\"username\") as string | null;\n  const email = formData.get(\"email\") as string | null;\n  const password = formData.get(\"password\") as string;\n\n  try {\n    const session = await getSession();\n    const result = await apiFetch<DeleteAccountData>(\"Account/deleteAccount\", {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${session.token}`\n      },\n      body: JSON.stringify({ email, username, password }),\n    });\n\n    return result;\n  } catch {\n    return {\n      message: \"Failed to delete account\",\n      data: { isSuccess: false },\n    };\n  }\n}\n\n// Reset password by email server action\nexport async function resetPasswordByEmail(formData: FormData) {\n  const email = formData.get(\"email\") as string;\n  const password = formData.get(\"password\") as string;\n  const authenticationCode = formData.get(\"authenticationCode\") as string;\n\n  try {\n    const result = await apiFetch<ResetPasswordData>(\"Account/resetPasswordByEmail\", {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ email, password, authenticationCode }),\n    });\n\n    return result;\n  } catch {\n    return {\n      message: \"Failed to reset password\",\n      data: { username: null, isSuccess: false },\n    };\n  }\n}\n\n// Reset password by old password server action\nexport async function resetPasswordByOldPassword(formData: FormData) {\n  const email = formData.get(\"email\") as string;\n  const oldPassword = formData.get(\"oldPassword\") as string;\n  const newPassword = formData.get(\"newPassword\") as string;\n\n  try {\n    const session = await getSession();\n    const result = await apiFetch<ResetPasswordData>(\"Account/resetPasswordByOldPassword\", {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${session.token}`\n      },\n      body: JSON.stringify({ email, oldPassword, newPassword }),\n    });\n\n    return result;\n  } catch {\n    return {\n      message: \"Failed to reset password\",\n      data: { username: null, isSuccess: false },\n    };\n  }\n}\n\n"],"names":[],"mappings":";;;;;;IA8GsB,SAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":["file:///Users/edwin/Desktop/CSCI3100_Project/src/utils/images.ts"],"sourcesContent":["interface uploadImageResponse {\n  message: string;\n  data: {\n    imageId: number;\n    imageAPI: string;\n    isSuccess: boolean;\n  };\n}\n\nexport function getProxyImageUrl(url: string): string {\n  // Handle case where URL already contains the API path\n  if (url.includes(\"flowchatbackend.azurewebsites.net/api/\")) {\n    const urlParts = url.split(\"/api/\");\n    if (urlParts.length > 1) {\n      return `/api/${urlParts[1]}`;\n    }\n  }\n  return url;\n}\n\nexport async function uploadImage(file: File): Promise<{ imageId: number; imageAPI: string }> {\n  try {\n    const formData = new FormData();\n    formData.append(\"file\", file);\n\n    const response = await fetch(\"api/Image/uploadImage\", {\n      method: \"POST\",\n      body: formData,\n    });\n    if (!response.ok) {\n      throw new Error(\"Network response was not ok\");\n    }\n\n    const data: uploadImageResponse = await response.json();\n    if (!data.data.isSuccess) {\n      console.error(\"Image upload failed:\", data.message);\n      return { imageId: 0, imageAPI: \"\" };\n    }\n\n    // Return the imageId and imageAPI\n    return {\n      imageId: data.data.imageId,\n      imageAPI: data.data.imageAPI,\n    };\n  } catch (error) {\n    console.error(\"Error uploading image:\", error);\n    return { imageId: 0, imageAPI: \"\" };\n  }\n}\n"],"names":[],"mappings":";;;;AASO,SAAS,iBAAiB,GAAW;IAC1C,sDAAsD;IACtD,IAAI,IAAI,QAAQ,CAAC,2CAA2C;QAC1D,MAAM,WAAW,IAAI,KAAK,CAAC;QAC3B,IAAI,SAAS,MAAM,GAAG,GAAG;YACvB,OAAO,CAAC,KAAK,EAAE,QAAQ,CAAC,EAAE,EAAE;QAC9B;IACF;IACA,OAAO;AACT;AAEO,eAAe,YAAY,IAAU;IAC1C,IAAI;QACF,MAAM,WAAW,IAAI;QACrB,SAAS,MAAM,CAAC,QAAQ;QAExB,MAAM,WAAW,MAAM,MAAM,yBAAyB;YACpD,QAAQ;YACR,MAAM;QACR;QACA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM;QAClB;QAEA,MAAM,OAA4B,MAAM,SAAS,IAAI;QACrD,IAAI,CAAC,KAAK,IAAI,CAAC,SAAS,EAAE;YACxB,QAAQ,KAAK,CAAC,wBAAwB,KAAK,OAAO;YAClD,OAAO;gBAAE,SAAS;gBAAG,UAAU;YAAG;QACpC;QAEA,kCAAkC;QAClC,OAAO;YACL,SAAS,KAAK,IAAI,CAAC,OAAO;YAC1B,UAAU,KAAK,IAAI,CAAC,QAAQ;QAC9B;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0BAA0B;QACxC,OAAO;YAAE,SAAS;YAAG,UAAU;QAAG;IACpC;AACF","debugId":null}},
    {"offset": {"line": 210, "column": 0}, "map": {"version":3,"sources":["file:///Users/edwin/Desktop/CSCI3100_Project/src/components/users/UserAvatar.tsx"],"sourcesContent":["import Image from \"next/image\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { getProxyImageUrl } from \"@/utils/images\";\n\nexport default function UserAvatar({\n  src,\n  username = null,\n  size = \"md\",\n}: {\n  src: string | null;\n  username?: string | null;\n  size?: \"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"xxl\";\n}) {\n  const imageUrl = src ? getProxyImageUrl(src) : null;\n\n  const containerSizes = {\n    xs: \"w-6 h-6\",\n    sm: \"w-8 h-8\",\n    md: \"w-10 h-10\",\n    lg: \"w-12 h-12\",\n    xl: \"w-14 h-14\",\n    xxl: \"w-20 h-20\",\n  };\n\n  const iconSizes = {\n    xs: \"sm\",\n    sm: \"1x\",\n    md: \"lg\",\n    lg: \"xl\",\n    xl: \"2xl\",\n    xxl: \"2xl\",\n  } as const;\n\n  const textSizes = {\n    xs: \"text-xs\",\n    sm: \"text-sm\",\n    md: \"text-md\",\n    lg: \"text-lg\",\n    xl: \"text-xl\",\n    xxl: \"text-2xl\",\n  };\n\n  const currentContainerSize = containerSizes[size] || containerSizes.md;\n  const currentIconSize = iconSizes[size] || iconSizes.md;\n  const currentTextSize = textSizes[size] || textSizes.md;\n\n  return (\n    <div className=\"avatar avatar-placeholder gap-1 items-center\">\n      <div className={`${!imageUrl ? \"bg-neutral text-neutral-content\" : \"\"} ${currentContainerSize} rounded-full `}>\n        {/* Show avatar if available, Fallback to icon if not */}\n        {imageUrl ? (\n          <Image\n            src={imageUrl}\n            alt={`${username}'s avatar`}\n            width={64}\n            height={64}\n            className=\"object-cover\"\n            unoptimized\n          />\n        ) : (\n          <FontAwesomeIcon icon={faUser} size={currentIconSize} />\n        )}\n      </div>\n      {/* Show username if given */}\n      {username && <span className={`${currentTextSize}`}>{username}</span>}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;AAEe,SAAS,WAAW,EACjC,GAAG,EACH,WAAW,IAAI,EACf,OAAO,IAAI,EAKZ;IACC,MAAM,WAAW,MAAM,CAAA,GAAA,yHAAA,CAAA,mBAAgB,AAAD,EAAE,OAAO;IAE/C,MAAM,iBAAiB;QACrB,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,KAAK;IACP;IAEA,MAAM,YAAY;QAChB,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,KAAK;IACP;IAEA,MAAM,YAAY;QAChB,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,KAAK;IACP;IAEA,MAAM,uBAAuB,cAAc,CAAC,KAAK,IAAI,eAAe,EAAE;IACtE,MAAM,kBAAkB,SAAS,CAAC,KAAK,IAAI,UAAU,EAAE;IACvD,MAAM,kBAAkB,SAAS,CAAC,KAAK,IAAI,UAAU,EAAE;IAEvD,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAW,GAAG,CAAC,WAAW,oCAAoC,GAAG,CAAC,EAAE,qBAAqB,cAAc,CAAC;0BAE1G,yBACC,6LAAC,gIAAA,CAAA,UAAK;oBACJ,KAAK;oBACL,KAAK,GAAG,SAAS,SAAS,CAAC;oBAC3B,OAAO;oBACP,QAAQ;oBACR,WAAU;oBACV,WAAW;;;;;yCAGb,6LAAC,uKAAA,CAAA,kBAAe;oBAAC,MAAM,2KAAA,CAAA,SAAM;oBAAE,MAAM;;;;;;;;;;;YAIxC,0BAAY,6LAAC;gBAAK,WAAW,GAAG,iBAAiB;0BAAG;;;;;;;;;;;;AAG3D;KA/DwB","debugId":null}},
    {"offset": {"line": 308, "column": 0}, "map": {"version":3,"sources":["file:///Users/edwin/Desktop/CSCI3100_Project/src/components/navigation/NavbarWithDrawer.tsx"],"sourcesContent":["\"use client\";\n\nimport Link from \"next/link\";\nimport { usePathname, useRouter } from \"next/navigation\";\nimport { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars, faMagnifyingGlass, faXmark, faUser, faCog } from \"@fortawesome/free-solid-svg-icons\";\nimport { faComments, faPaperPlane, faBell, faEnvelope } from \"@fortawesome/free-regular-svg-icons\";\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport Image from \"next/image\";\nimport { logout } from \"@/utils/authentication\";\nimport { useSession } from \"@/hooks/useSession\";\nimport UserAvatar from \"@/components/users/UserAvatar\";\n\nexport default function NavbarWithDrawer() {\n  const [isSidebarOpen, setSidebarOpen] = useState<boolean>(false);\n  const [isSearchOpen, setSearchOpen] = useState<boolean>(false);\n  const pathname = usePathname();\n  const { session, refresh } = useSession();\n  const router = useRouter();\n\n  // Check if a path is active\n  const isActive = (path: string) => pathname === path;\n\n  const handleLogout = async () => {\n    await logout();\n    // Refresh session to update the UI\n    await refresh();\n    // Redirect to login page\n    router.push(\"/login\");\n  };\n\n  const toggleSidebar = (): void => {\n    setSidebarOpen((prev) => !prev);\n  };\n\n  const toggleSearch = (): void => {\n    setSearchOpen((prev) => !prev);\n  };\n\n  return (\n    <>\n      <div className=\"navbar bg-base-100 shadow-md px-4 z-50 fixed top-0\">\n        {isSearchOpen ? (\n          // Mobile Search UI - Replaces navbar content when active\n          <div className=\"w-full flex items-center sm:hidden\">\n            <button onClick={toggleSearch} className=\"btn btn-ghost btn-circle mr-2 flex-none\">\n              <FontAwesomeIcon icon={faXmark} size=\"lg\" />\n            </button>\n            <div className=\"relative flex-1 h-10\">\n              <div className=\"absolute left-3 top-1/2 -translate-y-1/2 text-base-content/60\">\n                <FontAwesomeIcon icon={faMagnifyingGlass} />\n              </div>\n              <input\n                type=\"text\"\n                placeholder=\"Search FlowChat\"\n                className=\"w-full h-full rounded-full bg-base-200 pl-10 pr-4 border-base-300\"\n                autoFocus\n              />\n            </div>\n          </div>\n        ) : (\n          // Regular Navbar Content\n          <>\n            <div className=\"navbar-start\">\n              <button onClick={toggleSidebar} className=\"btn btn-ghost\">\n                <FontAwesomeIcon icon={faBars} size=\"2xl\" />\n              </button>\n              <Link href=\"/\">\n                <div className=\"flex items-center mx-2 gap-2\">\n                  <div>\n                    <Image\n                      src={\"/favicon.ico\"}\n                      alt=\"FlowChat Logo\"\n                      width={40}\n                      height={40}\n                      className=\"min-w-6 min-h-6\"\n                    />\n                  </div>\n                  <div className=\"hidden md:block text-2xl lg:text-3xl font-black tracking-tight\">FlowChat</div>\n                </div>\n              </Link>\n            </div>\n\n            <div className=\"navbar-center\">\n              <div className=\"relative hidden sm:block w-full max-w-sm min-w-sm lg:min-w-lg h-10\">\n                <div className=\"absolute left-3 top-1/2 -translate-y-1/2 text-base-content/60\">\n                  <FontAwesomeIcon icon={faMagnifyingGlass} />\n                </div>\n                <input\n                  type=\"text\"\n                  placeholder=\"Search FlowChat\"\n                  className=\"bg-base-300 w-full h-full rounded-full text-sm pl-10\"\n                />\n              </div>\n            </div>\n\n            <div className=\"navbar-end\">\n              {/* Mobile Search Button*/}\n              <button className=\"sm:hidden btn btn-ghost btn-circle\" onClick={toggleSearch}>\n                <FontAwesomeIcon icon={faMagnifyingGlass} size=\"lg\" />\n              </button>\n\n              {/* User Avatar */}\n              <div className=\"dropdown dropdown-end\">\n                <div tabIndex={0} role=\"button\" className=\"btn btn-ghost btn-circle\">\n                  <UserAvatar src={session.avatar!} size=\"md\" />\n                </div>\n                <ul tabIndex={0} className=\"dropdown-content menu bg-base-100 rounded-box shadow\">\n                  {session.isLoggedIn ? (\n                    /* Logged in menu */\n                    <>\n                      <li>\n                        <Link href={`/profile/${session.userId}`}>\n                          <FontAwesomeIcon icon={faUser} />\n                          Profile\n                        </Link>\n                      </li>\n                      <div className=\"divider my-0\"></div>\n                      <li>\n                        <button onClick={handleLogout}>Sign out</button>\n                      </li>\n                    </>\n                  ) : (\n                    /* Not logged in menu */\n                    <>\n                      <li>\n                        <Link href=\"/login\">Login</Link>\n                      </li>\n                      <li>\n                        <Link href=\"/register\">Register</Link>\n                      </li>\n                    </>\n                  )}\n                </ul>\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n\n      {/* Add a spacer div to prevent content from hiding under the navbar */}\n      <div className=\"h-16\"></div>\n\n      <aside\n        className={`h-[calc(100vh-4rem)] shadow bg-base-100 fixed top-16 z-40 transition-transform duration-300 flex flex-col p-4 w-[85vw] sm:w-70 ${\n          isSidebarOpen ? \"translate-x-0\" : \"-translate-x-full\"\n        }`}\n      >\n        <div className=\"flex-grow overflow-y-auto\">\n          <ul className=\"menu bg-base-100 w-full space-y-3\">\n            <li>\n              <details open>\n                <summary className=\"flex gap-4\">\n                  <FontAwesomeIcon icon={faComments} size=\"xl\" />\n                  <span>Forum</span>\n                </summary>\n                <ul className=\"ml-2 mt-2 space-y-2\">\n                  <li>\n                    <Link href=\"/forum/latest\" className={isActive(\"/forum/latest\") ? \"bg-base-300 font-bold\" : \"\"}>\n                      Latest\n                    </Link>\n                  </li>\n                  <li>\n                    <Link\n                      href=\"/forum/recommended\"\n                      className={isActive(\"/forum/recommended\") ? \"bg-base-300 font-bold\" : \"\"}\n                    >\n                      Recommended\n                    </Link>\n                  </li>\n                  <li>\n                    <Link\n                      href=\"/forum/following\"\n                      className={isActive(\"/forum/following\") ? \"bg-base-300 font-bold\" : \"\"}\n                    >\n                      Following\n                    </Link>\n                  </li>\n                </ul>\n              </details>\n            </li>\n            <li>\n              <Link\n                href=\"/messages\"\n                className={`flex items-center gap-4 ${isActive(\"/direct-messages\") ? \"bg-base-300 font-bold\" : \"\"}`}\n              >\n                <FontAwesomeIcon icon={faPaperPlane} size=\"xl\" />\n                <span>Direct Messages</span>\n              </Link>\n            </li>\n\n            <li>\n              <Link\n                href=\"/settings\"\n                className={`flex items-center gap-4 ${isActive(\"/settings\") ? \"bg-base-300 font-bold\" : \"\"}`}\n              >\n                <FontAwesomeIcon icon={faCog} size=\"xl\" />\n                <span>Settings</span>\n              </Link>\n            </li>\n          </ul>\n        </div>\n        <div className=\"mt-auto pt-4\">\n          <div className=\"divider m-0\"></div>\n          <ul className=\"menu bg-base-100 w-full space-y-3\">\n            <li>\n              <a\n                href=\"https://github.com/FrogwinX/CSCI3100_Project\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"flex items-center gap-4\"\n              >\n                <FontAwesomeIcon icon={faGithub} size=\"xl\" />\n                <span>Source</span>\n              </a>\n            </li>\n            <li>\n              <a href=\"mailto:contact@example.com?subject=Query%20About%20FlowChat\" className=\"flex items-center gap-4\">\n                <FontAwesomeIcon icon={faEnvelope} size=\"xl\" />\n                <span>Contact</span>\n              </a>\n            </li>\n          </ul>\n          <footer className=\"footer footer-center text-base-content text-xs opacity-50 mt-4\">\n            <p>Copyright © {new Date().getFullYear()} - All right reserved</p>\n          </footer>\n        </div>\n      </aside>\n    </>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}